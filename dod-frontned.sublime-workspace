{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"user",
				"userSurplusBalance"
			],
			[
				"time",
				"timestamp"
			],
			[
				"Dex",
				"DEXOracleFactory"
			],
			[
				"de",
				"deploy"
			],
			[
				"s",
				"sym"
			],
			[
				"depl",
				"deployer4"
			],
			[
				"sy",
				"symbol"
			],
			[
				"sym",
				"symbols"
			],
			[
				"o",
				"out_put_files"
			],
			[
				"deplo",
				"deployer"
			],
			[
				"set",
				"setContractAddress"
			],
			[
				"dep",
				"deployer"
			],
			[
				"cc",
				"cc_s"
			],
			[
				"shor",
				"short_owner"
			],
			[
				"ex",
				"exit"
			],
			[
				"cure",
				"current_timestamp"
			],
			[
				"tx",
				"txv"
			],
			[
				"depos",
				"deposits"
			],
			[
				"curr",
				"current_round_id"
			],
			[
				"total",
				"totalSupply"
			],
			[
				"E",
				"EXCHG"
			],
			[
				"cons",
				"console"
			],
			[
				"tota",
				"totalWrittenVolume"
			],
			[
				"cont",
				"continue"
			],
			[
				"opti",
				"option_tokens"
			],
			[
				"vl",
				"volume"
			],
			[
				"tod",
				"to_decimals"
			],
			[
				"tow",
				"to_wei"
			],
			[
				"exc",
				"exchange_bal"
			],
			[
				"col",
				"column_number"
			],
			[
				"con",
				"continue"
			],
			[
				"tot",
				"total_holding"
			],
			[
				"USD",
				"USDT"
			],
			[
				"st",
				"strategy"
			],
			[
				"stable",
				"stablecoin"
			],
			[
				"mcmc",
				"mcmc_symbol_computation"
			],
			[
				"option",
				"option_type"
			],
			[
				"av",
				"available"
			],
			[
				"opt",
				"options"
			],
			[
				"su",
				"supply"
			],
			[
				"US",
				"USDT"
			],
			[
				"cred",
				"credit_provider"
			],
			[
				"liq",
				"linear_liquidity_pool"
			],
			[
				"r",
				"receipt"
			],
			[
				"with",
				"withdraw"
			],
			[
				"options_ex",
				"option_tokens_expired"
			],
			[
				"exp",
				"option_tokens_expired"
			],
			[
				"liquidi",
				"linear_liquidity_pool"
			],
			[
				"liquid",
				"has_tried_liquidating"
			],
			[
				"random",
				"random_advancer"
			],
			[
				"total_",
				"total_written"
			],
			[
				"moc",
				"mock_time"
			],
			[
				"x0",
				"x0s"
			],
			[
				"norm",
				"normed_vol"
			],
			[
				"crea",
				"create_symbol"
			],
			[
				"writt",
				"writtenVolume"
			],
			[
				"vol",
				"volume"
			],
			[
				"nor",
				"normed_vol"
			],
			[
				"excha",
				"exchange_bal"
			],
			[
				"btc",
				"btcusd_chainlink_feed"
			],
			[
				"cre",
				"credit"
			],
			[
				"str",
				"strike"
			],
			[
				"months",
				"months_per_year"
			],
			[
				"days",
				"days_per_year"
			],
			[
				"option_to",
				"option_token"
			],
			[
				"Ex",
				"Exception"
			],
			[
				"rn",
				"random"
			],
			[
				"quer",
				"query_buy"
			],
			[
				"lin",
				"linear_liquidity_pool"
			],
			[
				"ag",
				"agent"
			],
			[
				"buy",
				"buyStock"
			],
			[
				"lie",
				"linear_liquidity_pool"
			],
			[
				"exchan",
				"options_exchange"
			],
			[
				"sele",
				"seleted_advancer"
			],
			[
				"op",
				"options_exchange"
			],
			[
				"age",
				"agents"
			],
			[
				"agen",
				"agent"
			],
			[
				"depo",
				"deposit_pool"
			],
			[
				"us",
				"usdt"
			],
			[
				"addr",
				"address"
			],
			[
				"pro",
				"property\tNew Property"
			],
			[
				"ava",
				"available_symbols"
			],
			[
				"li",
				"liquidity_pool"
			],
			[
				"da",
				"daily_period"
			],
			[
				"sell",
				"sellStock"
			],
			[
				"curren",
				"current_block"
			],
			[
				"Pro",
				"ProtocolSettingsContract"
			],
			[
				"Ag",
				"AggregatorV3Mock"
			],
			[
				"L",
				"LinearLiquidityPool"
			],
			[
				"options",
				"options_exchange"
			],
			[
				"volu",
				"volume"
			],
			[
				"volum",
				"volumeBase"
			],
			[
				"for",
				"format"
			],
			[
				"lat",
				"latest_valid"
			],
			[
				"log",
				"log"
			],
			[
				"incre",
				"evm_increaseTime"
			],
			[
				"provi",
				"provider"
			],
			[
				"blo",
				"block_offset"
			],
			[
				"to_",
				"to_wei"
			],
			[
				"to",
				"to_wei"
			],
			[
				"cou",
				"coupon_bid"
			],
			[
				"__",
				"__approved"
			],
			[
				"wait",
				"waitForTransactionReceipt"
			],
			[
				"le",
				"length"
			],
			[
				"bloc",
				"block_before"
			],
			[
				"funct",
				"functions"
			],
			[
				"co",
				"contract"
			],
			[
				"web",
				"websocket_timeout"
			],
			[
				"re",
				"receipt"
			],
			[
				"ev",
				"evmAddr"
			],
			[
				"max_co",
				"max_coupon_epoch_index"
			],
			[
				"coupon_",
				"coupon_expirys"
			],
			[
				"ep",
				"epoch_start_price"
			],
			[
				"x",
				"xSD"
			],
			[
				"red",
				"redeemed_count"
			],
			[
				"OR",
				"OracleContract"
			],
			[
				"from",
				"from_tokens"
			],
			[
				"forc",
				"force_mine"
			],
			[
				"Su",
				"sumbitted"
			],
			[
				"is_i",
				"is_init_agents"
			],
			[
				"unis",
				"uniswap_pair"
			],
			[
				"up",
				"update"
			],
			[
				"uni",
				"uniswap_token"
			],
			[
				"Uni",
				"Uniswap"
			],
			[
				"functi",
				"function"
			],
			[
				"dec",
				"decimals"
			],
			[
				"app",
				"append"
			],
			[
				"coupon_ex",
				"coupon_expiry"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 360.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/home/gitm/Documents/Startups/crypto/DeFiOptions-frontend/src/contracts/OptionToken.json",
		"/home/gitm/Documents/Startups/crypto/DeFiOptions-frontend/src/store/modules/liquidityPool.js",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions-frontend/src/components/trade/SellOption.vue",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions-frontend/src/assets/global.css",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions-frontend/src/components/portfolio/AccountDeposit.vue",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions-frontend/src/pages/Invest.vue",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/log.tsv",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/finance/CreditToken.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/test/pools/LinearLiquidityPool/Base.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/test/pools/LinearLiquidityPool/TestPoolAvailability.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/governance/GovToken.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/ILiquidityPool.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/pools/LinearLiquidityPool.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/pools/LiquidityPool.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/pools/LinearAnySlopeInterpolator.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/feeds/DEXOracleV1.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/finance/OptionToken.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/IDEXOracleV1.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/finance/UnderlyingVault.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/feeds/DEXAggregatorV1.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/IGovToken.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/finance/RedeemableToken.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/IProposal.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/feeds/DEXFeedFactory.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/mock/AggregatorV3Mock.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/weights.mat",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/build/contracts/LinearLiquidityPoolFactory.json",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/feeds/ChainlinkFeed.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/pools/LiquidityPoolGovernance.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/IYieldTracker.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/finance/YieldTracker.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/IOptionToken.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/IProtocolSettings.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/governance/Proposal.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/ICreditToken.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/utils/ERC20.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/feeds/DEXOracleFactory.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/mock/TimeProviderMock.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/feeds/DEXFeed.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/utils/PangolinLibrary.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/utils/Decimal.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/q.txt",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/IUnderlyingVault.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/build/contracts/LinearLiquidityPool.json",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/test/common/samples/ChangeInterestRateProposal.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/UnderlyingFeed.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/package-lock.json",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/package.json",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/utils/PangolinOracleLibrary.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/external/Decimal.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/IOptionsExchange.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/ICreditProvider.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/plot.py",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/IInterpolator.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/truffle-config.js",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/truffle-config.js",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/pools/LinearInterpolator.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/interfaces/LiquidityPool.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/deploy_output.txt",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/test/common/actors/OptionsTrader.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/test/governance/ProtocolSettings/Base.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/mcmc_symbol_params.json",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/run_output.txt",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/finance/LinearLiquidityPoolFactory.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/utils/MoreMath.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/test/pools/LinearLiquidityPool/TestPoolTrading.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/migrations/2_deploy_contracts.js",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/test/finance/OptionsExchange/Base.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/mcmc_symbol_computation.json",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/mock/EthFeedMock.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/mock/ERC20Mock.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/mock/PoolTrader.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/mock/Base.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/governance/ProtocolSettings.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/deployment/Proxy.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/build/contracts/OptionsExchange.json",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/build/contracts/CreditProvider.json",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/finance/OptionsExchangeStats.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/deployment/Deployer.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/deployment/ManagedContract.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/finance/OptionTokenFactory.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/contracts/finance/OptionsExchangeNew.sol",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/op_model",
		"/Users/cinquemb/Documents/Startups/crypto/DeFiOptions/model/chain/TempTestOptionPrice.mat",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/dao/Bonding.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/histogram.gnuplot",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/dao/Comptroller.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/oracle/IOracle.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/oracle/Oracle.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/mock/MockOracle.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/log.tsv",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/deploy_output.txt",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/ganache_output.txt",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/log/chain/C/0.log",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/0.log",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/migrations/2_deploy.js",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/db/chain/C/0.log",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/0xA129a1dE18521e6A943C5E654B83EBe617A2439B-approvals.json",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/contracts/dao/Bonding.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/0xaC2562193a8B5D47A9Dd9a5c8b075a093c79e4dB-approvals.json",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/0xB33c1C02119eD46605695709907009e26171fd1A-approvals.json",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/0xc95DbfbBE0c76De8dfBc71E16F913648bB4B151e-approvals.json",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/sample-stall-log.log",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/log.150adv.10prem_4.tsv",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/mock/MockRegulator.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/dao/Market.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/truffle.js",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/db/0.log",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/db/chain/C/3.log",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/make_accounts.js",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/db/chain/C/4.log",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/log.150adv.10prem_3.tsv",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/db/chain/C/1.log",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/venv/lib/python3.7/site-packages/web3/providers/base.py",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/README.md",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/raw.1500adv.10prem_5.txt",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/log.1500adv.10prem_5.tsv",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/hardhat.config.js",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/make_accounts_output.txt",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/dao/Deployer.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/force_mine.sh",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/migrations/1_initial_migration.js",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/venv/lib/python3.7/site-packages/web3/providers/websocket.py",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/venv/lib/python3.7/site-packages/web3/middleware/validation.py",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/oracle/Pool.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/dao/Govern.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/protocol/contracts/token/Dollar.sol",
		"/Users/cinquemb/Documents/Startups/crypto/dollar-avax/model/chain/go-ethereum-keystore674007013/UTC--2021-03-11T04-26-18.227631000Z--6e3d8c9d37801a83456b6d22d871c4190bb6dfca"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"",
			"/Users/cinquemb/Documents/Startups/GoBlue/Code/eat-right-now/ERN/EatRightNow/platforms/ios/www/eat_js/",
			"/Users/cinquemb/Documents/Startups/GoBlue/Code/eat-right-now/ERN/EatRightNow/platforms/ios/www/eat_js/*.js"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"isEnoughAllowance",
			"optionAllowance",
			"isEnoughAllowance",
			"isOptionSizeNotValid",
			"isEnoughAllowance",
			"write",
			"isOptionSizeNotValid",
			"isEnoughAllowance",
			"selectedOptionSize",
			"optionAllowance",
			"approveAllow",
			"approve",
			"calcCollateral",
			"writingOptionsBalance",
			"watch",
			"isEnoughAllowance",
			"writingStepTx",
			"fetchOptionAllowance",
			"optionAllowance",
			"writingStepTx",
			"writingTxStep",
			"optionAllowance",
			"fetchOptionAllowance",
			"this.optionAllowance",
			"isEnoughAllowance",
			"fetchOptionAllowance",
			"allowance",
			"writingStepTx = 0",
			"Covered(",
			"optionAllowance",
			"fetchOptionAllowance",
			"writingStepTx",
			"approveAllowanceCovered",
			"liquidate",
			"liquidateOptions",
			"exchange",
			"redeemOption",
			"optionSide",
			"slippage",
			"optionPriceSell",
			"burnOption",
			"burn",
			"slippage",
			"optionPriceFormattedSell",
			"slippage",
			"selectedOptionPrice",
			"slippage",
			"optionPriceSell",
			"slippage",
			"selectedOptionPrice",
			"writeCovered",
			"timestamp",
			"component.option.timestamp",
			"timestamp",
			"covered",
			"option.timestamp",
			"component.option.timestamp",
			"strikeInWei",
			"isEnoughAllowance",
			"getExchangeDaiAllowance",
			"getUserExchangeBalanceAllowance",
			"writingStepTx",
			"burn",
			"balance",
			"burn",
			"fetchExchangeAllowance",
			"exchangeAllowance",
			"getExchangeUsdcAllowance",
			"depositValue",
			"allowance",
			"exchangeAllowance",
			"fetchExchangeAllowance",
			"allowance",
			"LpAllowance",
			"depositValue",
			"isDepositValueNotValid",
			"depositIntoExchange",
			"setSymbolsList",
			"fetchSymbolsList",
			"setSymbolsList",
			"discord",
			"slippage",
			"selectedOptionPrice",
			"sellOption",
			"burnOption",
			"setCollateral",
			"component.getOptionsExchangeContract",
			"exchangeContract",
			"getOptionsExchangeContract",
			"burn",
			"OptionToken",
			"\\\"",
			"burn",
			"OptionTokenContractJson",
			"redeemOption",
			"collateralNeededRaw",
			"Exchange Balance",
			"isBuyWithExchangeBalance",
			"Exchange Balance",
			"getTotal",
			"this.buyWith",
			"buyWith",
			"setBuyWith",
			"fetchUnderlyingAssetBalance",
			"balance",
			"userOptions",
			"getUserOptions",
			".type",
			"type",
			"symbolsArray",
			"symbolsListJson",
			"getSymbolsListJson",
			"getFilteredSymbols",
			"option",
			"writingStepTx",
			"writeOptions",
			"this.option",
			"component.option",
			"component.option.type",
			"put",
			"approveAllowanceCovered",
			"setBuyWith",
			"getCoveredType",
			"selectedCoveredType",
			"getCoveredType",
			"getUserStablecoinBalance",
			"=======",
			"getUnderlying"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\"",
			"underlyingBalanceWei / ",
			"param",
			"dexFeedFactory",
			"DEXFeedFactory",
			"block.timestamp",
			"settings",
			"exchange",
			"ICreditProvider.",
			"should be incentivized at end if passess (based on gas price * gas used * settings controlled premium, converted to dollars)",
			"_exchange",
			"onlyExchange",
			"IProtocolSettings(settingsAddr).",
			"IOptionsExchange.OptionData",
			"IOptionsExchange.OptionType",
			"IOptionsExchange(exchangeAddr).getOptionSymbol(",
			"IOptionsExchange(exchangeAddr).transferBalance(",
			"IOptionsExchange(exchangeAddr).writeOptions(",
			"IOptionsExchange(exchangeAddr).calcCollateral(",
			"IOptionsExchange(exchangeAddr).collateral(",
			"IOptionsExchange(exchangeAddr).calcIntrinsicValue(",
			"IOptionsExchange(exchangeAddr).calcExpectedPayout(",
			"IOptionsExchange(exchangeAddr).resolveToken(",
			"IOptionsExchange(exchangeAddr).balanceOf(",
			"settings.exchangeTime()",
			"block.timestamp",
			"** USDT['decimals']",
			"exchange.exchangeTime",
			"",
			"self.usdt_token",
			"\": \"",
			"\"=\"",
			"\"",
			"poll_latency=tx_pool_latency",
			"'gas': 89902345",
			"'gas': 99902345",
			"'gas': 99999999",
			"100000000",
			"'gas': 209999999",
			"'gas': 8000000000",
			"PGLRouter",
			"",
			"xSD",
			"xsd_",
			"a.xsd",
			"unreg_int",
			"getAvgAvgYieldAcrossCouponAuctions",
			"Decimal.D256 memory",
			"external returns",
			"super.",
			"_",
			"this.auction.address",
			"Expiry",
			"Epoch.AuctionState",
			"0.0.0.0 ",
			"maturity_date",
			"approx_name",
			"Mg\\+2",
			"10, 30",
			"process_api_status(",
			"sleep(0.1)",
			"sleep(0.2)",
			"time.sleep(0.2)",
			"time.sleep(1)",
			"authenticate_api",
			"current_trading_api",
			"trading_api.",
			"",
			"self.",
			"t\" <<",
			"std::cout << \"",
			"set_open_pos_time",
			"double",
			"-3",
			"-2",
			"requests.",
			"-3",
			"-2",
			"all_date_dict[\"",
			"all_data_dict[\"\"][i",
			"FRAMA",
			"present_data\\[sim_key\\]\\[z\\]",
			"present_data\\[temp_sim_value\\]\\[z\\]",
			"present_data\\[sim_key\\]\\[z\\]",
			"prev_data\\[sim_key\\]\\[z\\]",
			"present_data\\[sim_key\\]\\[z\\]",
			"[std::abs((i % 2) - trade_lag.asInt())]",
			"[std::abs((i % 2) - 1)]",
			"[abs((i % 2) - 1)]",
			"[(x % 2)]",
			"(x % 2)",
			"svm_data_new[sim_key][z][\"CURRENT\"]",
			"",
			"std::stof(",
			"std::unordered_map",
			"svm_data",
			"",
			"svm_data",
			"",
			"svm_data",
			"",
			"\"",
			"\\\\\"",
			"\\\" ",
			", ",
			"0.00000",
			"get_number",
			"",
			"CORREL_MOD_FUT_",
			"SIGNALS_FUT_",
			"'",
			"a",
			"s",
			"u",
			"∂",
			"ß",
			"DD_SCALE",
			"DD_LOC",
			"DD_SHAPE",
			"DD_SCALE",
			"DD_LOC",
			"SIGNALS_FUT_",
			"post_2009",
			"self.clustering_offsets\n",
			"test_html\n",
			"\n",
			"),\n",
			"\" =>"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 29.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 25.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "dod-frontned.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"src/components/portfolio/MyOptions.vue"
			],
			[
				"ds",
				"NFBcorrelationAnalysis/env/lib/python2.7/site-packages/networkx/generators/degree_seq.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 274.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
